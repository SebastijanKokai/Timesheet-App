USE master;

DROP DATABASE IF EXISTS timesheet_db;
CREATE DATABASE timesheet_db;

USE timesheet_db;

-- DELETE FROM timesheet.COUNTRY;
-- DELETE FROM timesheet.CLIENT;
-- DELETE FROM timesheet.PROJECT;
-- DELETE FROM timesheet.TASK_TABLE
-- DELETE FROM timesheet.LEAD_PROJECT
-- DELETE FROM timesheet.USER_PROJECT
	
DROP TABLE IF EXISTS timesheet.LEAD_PROJECT;
DROP TABLE IF EXISTS timesheet.TASK_TABLE;
DROP TABLE IF EXISTS timesheet.USER_PROJECT;
DROP TABLE IF EXISTS timesheet.PROJECT;
DROP TABLE IF EXISTS timesheet.CLIENT;
DROP TABLE IF EXISTS timesheet.COUNTRY;
DROP TABLE IF EXISTS timesheet.USER_TABLE;
DROP TABLE IF EXISTS timesheet.ROLE_TABLE;
DROP TABLE IF EXISTS timesheet.CATEGORY;

GO
IF SCHEMA_ID('timesheet') IS NOT NULL
	DROP SCHEMA timesheet;
GO
CREATE SCHEMA timesheet;
GO

CREATE TABLE timesheet.ROLE_TABLE (
	ID UNIQUEIDENTIFIER PRIMARY KEY,
	ROLE_NAME VARCHAR(50) NOT NULL,
	DELETED_DATE DATETIME
);

CREATE TABLE timesheet.USER_TABLE (
	ID UNIQUEIDENTIFIER PRIMARY KEY,
	ROLE_ID UNIQUEIDENTIFIER,
	EMAIL VARCHAR(50) NOT NULL,
	USERNAME VARCHAR(50) NOT NULL,
	USER_PASSWORD VARCHAR(50) NOT NULL,
	FIRST_NAME VARCHAR(50) NOT NULL,
	LAST_NAME VARCHAR(50) NOT NULL,
	HOURS_PER_WEEK INT NOT NULL,
	USER_STATUS VARCHAR(20) NOT NULL,
	DELETED_DATE DATETIME,
	CONSTRAINT FK_USER_ROLE FOREIGN KEY (ROLE_ID) REFERENCES timesheet.ROLE_TABLE(ID)
);

CREATE TABLE timesheet.COUNTRY (
	ID UNIQUEIDENTIFIER PRIMARY KEY,
	COUNTRY_NAME VARCHAR(50) NOT NULL,
	DELETED_DATE DATETIME
);

CREATE TABLE timesheet.CLIENT (
	ID UNIQUEIDENTIFIER PRIMARY KEY,
	COUNTRY_ID UNIQUEIDENTIFIER,
	CLIENT_NAME VARCHAR(50) NOT NULL,
	CLIENT_ADDRESS VARCHAR(50),
	CLIENT_CITY VARCHAR(50),
	CLIENT_ZIP_CODE VARCHAR(20),
	CONSTRAINT FK_CLIENT_COUNTRY FOREIGN KEY (COUNTRY_ID) REFERENCES timesheet.COUNTRY(ID)
);

CREATE TABLE timesheet.PROJECT (
	ID UNIQUEIDENTIFIER PRIMARY KEY,
	CLIENT_ID UNIQUEIDENTIFIER NOT NULL,
	PROJECT_NAME VARCHAR(50) NOT NULL,
	PROJECT_DESCRIPTION VARCHAR(200),
	PROJECT_STATUS VARCHAR(20) NOT NULL,
	DELETED_DATE DATETIME,
	CONSTRAINT FK_PROJECT_CLIENT FOREIGN KEY (CLIENT_ID) REFERENCES timesheet.CLIENT(ID)
);

CREATE TABLE timesheet.USER_PROJECT (
	USER_TABLE_ID UNIQUEIDENTIFIER NOT NULL,
	PROJECT_ID UNIQUEIDENTIFIER NOT NULL,
	DELETED_DATE DATETIME,
	CONSTRAINT PK_USER_PROJECT PRIMARY KEY (USER_TABLE_ID, PROJECT_ID),
	CONSTRAINT FK_USER_PROJECT_USER_TABLE FOREIGN KEY (USER_TABLE_ID) REFERENCES timesheet.USER_TABLE(ID),
	CONSTRAINT FK_USER_PROJECT_PROJECT FOREIGN KEY (PROJECT_ID) REFERENCES timesheet.PROJECT(ID),
);

CREATE TABLE timesheet.LEAD_PROJECT (
	USER_TABLE_ID UNIQUEIDENTIFIER NOT NULL,
	PROJECT_ID UNIQUEIDENTIFIER NOT NULL,
	DELETED_DATE DATETIME,
	CONSTRAINT PK_LEAD_PROJECT PRIMARY KEY (USER_TABLE_ID, PROJECT_ID),
	CONSTRAINT FK_LEAD_PROJECT_USER_PROJECT FOREIGN KEY (USER_TABLE_ID, PROJECT_ID) REFERENCES timesheet.USER_PROJECT(USER_TABLE_ID, PROJECT_ID),
);

CREATE TABLE timesheet.CATEGORY (
	ID UNIQUEIDENTIFIER PRIMARY KEY,
	CATEGORY_NAME VARCHAR(50) NOT NULL,
	DELETED_DATE DATETIME
);

CREATE TABLE timesheet.TASK_TABLE (
	ID UNIQUEIDENTIFIER PRIMARY KEY,
	USER_TABLE_ID UNIQUEIDENTIFIER NOT NULL,
	PROJECT_ID UNIQUEIDENTIFIER NOT NULL,
	CATEGORY_ID UNIQUEIDENTIFIER,
	TASK_DESCRIPTION VARCHAR(200),
	TASK_TIME NUMERIC(4, 2) NOT NULL,
	TASK_OVERTIME NUMERIC(4, 2),
	TASK_DATE DATE NOT NULL,
	CONSTRAINT FK_TASK_USER_PROJECT FOREIGN KEY (USER_TABLE_ID, PROJECT_ID) REFERENCES timesheet.USER_PROJECT(USER_TABLE_ID, PROJECT_ID),
	CONSTRAINT FK_TASK_CATEGORY FOREIGN KEY (CATEGORY_ID) REFERENCES timesheet.CATEGORY(ID)
);